[{"/Users/alexandreshafii/prologe-kpi/src/reportWebVitals.js":"1","/Users/alexandreshafii/prologe-kpi/src/App.js":"2","/Users/alexandreshafii/prologe-kpi/src/index.js":"3","/Users/alexandreshafii/prologe-kpi/src/Task.js":"4"},{"size":362,"mtime":1606230232745,"results":"5","hashOfConfig":"6"},{"size":6298,"mtime":1606909825053,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1606230232737,"results":"8","hashOfConfig":"6"},{"size":950,"mtime":1606748273750,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1khadex",{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/alexandreshafii/prologe-kpi/src/reportWebVitals.js",[],"/Users/alexandreshafii/prologe-kpi/src/App.js",["20","21","22","23","24","25"],"/Users/alexandreshafii/prologe-kpi/src/index.js",[],["26","27"],"/Users/alexandreshafii/prologe-kpi/src/Task.js",["28","29","30"],"import React from \"react\";\nimport firebase from \"firebase/app\";\n\nexport const Task = ({ task }) => {\n  const [taskName, setTaskName] = React.useState(task.taskName);\n  const [taskOwner, setTaskOwner] = React.useState(task.taskOwner);\n  const [taskDeadline, setTaskDeadline] = React.useState(task.taskDeadline);\n  // const onUpdate = () => {\n  //   const db = firebase.firestore();\n  //   db.collection(\"things\")\n  //     .doc(task.id)\n  //     .set({ ...task, taskName });\n  //   console.log({ ...task });\n  // };\n\n  const onDelete = () => {\n    const db = firebase.firestore();\n    db.collection(\"things\").doc(task.id).delete();\n  };\n\n  return (\n    <>\n      <div\n      // value={taskName}\n      // onChange={(e) => {\n      //   setTaskName(e.target.value);\n      // }}\n      >\n        {taskName} {taskOwner} {taskDeadline}\n        <button onClick={onDelete}>Delete</button>\n      </div>\n    </>\n  );\n};\n//<button onClick={onUpdate}>Update</button>\n",{"ruleId":"31","severity":1,"message":"32","line":7,"column":21,"nodeType":"33","messageId":"34","endLine":7,"endColumn":31},{"ruleId":"31","severity":1,"message":"35","line":7,"column":33,"nodeType":"33","messageId":"34","endLine":7,"endColumn":44},{"ruleId":"31","severity":1,"message":"36","line":35,"column":10,"nodeType":"33","messageId":"34","endLine":35,"endColumn":22},{"ruleId":"31","severity":1,"message":"37","line":35,"column":24,"nodeType":"33","messageId":"34","endLine":35,"endColumn":39},{"ruleId":"38","severity":1,"message":"39","line":95,"column":13,"nodeType":"40","messageId":"41","endLine":95,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":149,"column":21,"nodeType":"44","endLine":149,"endColumn":32},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"31","severity":1,"message":"49","line":5,"column":20,"nodeType":"33","messageId":"34","endLine":5,"endColumn":31},{"ruleId":"31","severity":1,"message":"50","line":6,"column":21,"nodeType":"33","messageId":"34","endLine":6,"endColumn":33},{"ruleId":"31","severity":1,"message":"51","line":7,"column":24,"nodeType":"33","messageId":"34","endLine":7,"endColumn":39},"no-unused-vars","'InputGroup' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'newTaskOwner' is assigned a value but never used.","'setNewTaskOwner' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'setTaskName' is assigned a value but never used.","'setTaskOwner' is assigned a value but never used.","'setTaskDeadline' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]